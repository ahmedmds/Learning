############### Using 'venv': Creating a virtual environment in a Projects folder ##############
....\Projects>python -m venv venv

### In VS Code, set Python Interpreter to venv ###
Will be prompted when python -m venv venv is executed or else...
Go to 'Terminal' and then 'New Terminal'
Ctrl+Shift*P
Click 'Python: Select Interpreter'
Click 'Enter Interpreter Path' and enter path:
....\Projects\venv\Scripts\python.exe
*Make sure in VS code that the correct 'venv' is set at bottom right


#### Activating the virtual environment ###
....\Projects>venv\Scripts\activate

#### Installing a package in the virtual environment ###
(venv) ....\Projects>pip install flask

#### Saving list of packages installed in the virtual environment ###
(venv) ....\Projects>pip freeze > requirements.txt

#### Installing packages to your virtual environment from a requirements.txt ###
(venv) ....\Projects>pip install -r requirements.txt

#### Deactivating the virtual environment ###
(venv) ....\Projects>deactivate



############### Using 'pipenv': Creating a virtual environment in a Projects folder ##############

# Install pipenv package
D:\....\Project01>pip install pipenv
# pipenv-pipes helps to switch between various environments
D:\....\Project01>pip install pipenv-pipes

# Create virtual environment
D:\....\Project01>python -m pipenv shell

#Virtual environment location
C:\Users\...\.virtualenvs\Project01-nAGdvdQh

# Activate virtual environment
D:\....\Project01>python -m pipenv shell

# Deactivate virtual envionment
(Project01-nAGdvdQh) D:\....\Project01>exit

# List virtual envionment
D:\....\Project01>python -m pipenv --venv

# For running any command in virtual environment
D:\....\Project01>python -m pipenv run <command>

# Install a package in virtual environment
D:\....\Project01>python -m pipenv install pandas

# Uninstall a package in virtual environment
D:\....\Project01>python -m pipenv uninstall pandas

# List packages in virtual environment
D:\....\Project01>python -m pipenv lock -r

# Create requirements.txt file
D:\....\Project01>python -m pipenv lock -r > requirements.txt

# Install packages from requirements.txt
D:\....\Project01>python -m pipenv install -r requirements.txt

# Run python interpreter
D:\....\Project01>python -m pipenv run python

# Installing a package e.g. pytest just for development purpose
D:\....\Project01>python -m pipenv install pytest --dev

# Uninstalling a package e.g. pytest from development only
D:\....\Project01>python -m pipenv uninstall pytest --dev

# Select correct interpreter in VSCode
C:\Users\...\.virtualenvs\Project01-nAGdvdQh\Scripts\python.exe

# Remove virtual environment
D:\....\Project01>python -m pipenv --rm
D:\....\Project01>del Pipfile
If necessary, delete folder 'C:\Users\...\.virtualenvs\Project01-nAGdvdQh'
C:\Users\...\.virtualenvs>rm Project01-nAGdvdQh